name: slacklinker
version: 0.0.0
synopsis: Slack backlink bot
dependencies:
  - adjunctions
  - aeson
  - base >= 4.9 && <5
  - base16-bytestring
  - base64-bytestring
  - bytestring
  - classy-prelude
  - cryptonite
  - data-default-class
  - directory
  - either
  - esqueleto
  - exceptions
  - extra
  - hs-opentelemetry-api
  - hs-opentelemetry-exporter-otlp
  - hs-opentelemetry-instrumentation-http-client
  - hs-opentelemetry-instrumentation-persistent
  - hs-opentelemetry-instrumentation-wai
  - hs-opentelemetry-sdk
  - http-api-data
  - http-client
  - http-client-tls
  - http-media
  - http-types
  - monad-logger
  - mono-traversable
  - optparse-applicative
  - optparse-generic
  - path-pieces
  - pcre-heavy
  - persistent
  - persistent-postgresql
  - pretty-simple
  - resource-pool
  - safe
  - servant
  - servant-client
  - servant-client-core
  - servant-server
  - slack-web
  - stm
  - string-conversions
  - template-haskell
  - text
  - th-abstraction
  - time
  - typed-process
  - unliftio
  - uri-bytestring
  - uuid
  - wai
  - warp

library:
  source-dirs: src

executables:
  slacklinker:
    main: app/Main.hs
    dependencies:
      - slacklinker
  one-off-task:
    main: task/Main.hs
    dependencies:
      - slacklinker

# Test suite
tests:
  test-dev:
    main: Main.hs
    source-dirs:
      - test
      - slack-web/src
      - src
    dependencies:
      - stm
      - hspec >= 2.9.4
      - hspec-core >= 2.9.4
      - hspec-expectations
      - hspec-golden >= 0.2
      - HUnit
      - aeson >= 2.0 && < 2.2
      - base >= 4.11 && < 4.18
      - scientific
      - containers
      - deepseq
      - unordered-containers
      - mono-traversable
      - template-haskell
      - string-variants
      - classy-prelude
      - hashable
      - vector
      - refined
      - string-conversions
      - http-api-data >= 0.3 && < 0.6
      - http-client >= 0.5 && < 0.8
      - http-client-tls >= 0.3 && < 0.4
      - servant >= 0.12 && < 0.20
      - servant-client >= 0.12 && < 0.20
      - servant-client-core >= 0.12 && < 0.20
      - text (>= 1.2 && < 1.3) || (>= 2.0 && < 2.1)
      - transformers
      - mtl
      - time
      - errors
      - pcre-heavy
      - megaparsec >= 5.0 && < 10
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
      - -Wno-incomplete-uni-patterns # Failing at runtime just means failing the test, which is ok
      - -O0
  test:
    main: Main.hs
    source-dirs:
      - test
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
      - -Wno-incomplete-uni-patterns # Failing at runtime just means failing the test, which is ok
      - -O0

    dependencies:
      - hspec >= 2.9.4
      - hspec-core >= 2.9.4
      - hspec-expectations
      - hspec-golden >= 0.2
      - HUnit
      - slacklinker

# from https://medium.com/mercury-bank/enable-all-the-warnings-a0517bc081c3
ghc-options:
  - -Weverything
  - -Wno-missing-exported-signatures # missing-exported-signatures turns off the more strict -Wmissing-signatures. See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
  - -Wno-missing-export-lists # Requires explicit export lists for every module, a pain for large modules
  - -Wno-missing-import-lists # Requires explicit imports of _every_ function (e.g. '$'); too strict
  - -Wno-missed-specialisations # When GHC can't specialize a polymorphic function. No big deal and requires fixing underlying libraries to solve.
  - -Wno-all-missed-specialisations # See missed-specialisations
  - -Wno-unsafe # Don't use Safe Haskell warnings
  - -Wno-missing-local-signatures # Warning for polymorphic local bindings. Don't think this is an issue
  - -Wno-monomorphism-restriction # Don't warn if the monomorphism restriction is used
  - -Wno-missing-safe-haskell-mode # Cabal isn’t setting this currently (introduced in GHC 8.10)
  - -Wno-prepositive-qualified-module # Cabal’s generate Path_*.hs doesn’t do this (fixed in https://github.com/haskell/cabal/pull/7352)
  - -Wno-unused-packages # Some tooling gives this error
  - -Wno-missing-kind-signatures # Warns literally every type

default-extensions:
  - AllowAmbiguousTypes
  - ApplicativeDo
  - BlockArguments
  - DataKinds
  - DeriveAnyClass
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DerivingVia
  - DuplicateRecordFields
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - ImportQualifiedPost
  - InstanceSigs
  - LambdaCase
  - LexicalNegation
  - MonoLocalBinds
  - MultiWayIf
  - NamedFieldPuns
  - NoImplicitPrelude
  - NumericUnderscores
  - OverloadedLabels
  - OverloadedStrings
  - OverloadedRecordDot
  - PartialTypeSignatures
  - PatternSynonyms
  - PolyKinds
  - RankNTypes
  - RecordWildCards
  - RecursiveDo
  - ScopedTypeVariables
  - StandaloneDeriving
  - StandaloneKindSignatures
  - TypeApplications
  - TypeFamilies
  - ViewPatterns
